@page "/EditBeat/"
@using BlazorMaui.Services.Interfaces
@inject NavigationManager Navigation
@inject IBeatsService BeatsService
@inject IAuthService Auth

<h1>Beat: @newBeat.Title</h1>

<div>
    <label>Title:</label>
    <input @bind="newBeat.Title" />
</div>

<div>
    <label>BPM:</label>
    <input type="number" @bind="newBeat.Bpm" />
</div>

<div>
    <label>Genre:</label>
    <input @bind="newBeat.Genre" />
</div>


<Button Onclick="() => SaveChanges()">
    @((isSaving != null) ? "Saving..." : "Save")
</Button>
<Button Onclick="async () => await PublishAudio()">
    @((isSaving != null) ? "Publishing..." : "Publish")
</Button>
<div class="h-50">
    <span class="text-white-50 font-monospace"></span>
</div>
@code {
    private Beat newBeat;
    private Beat oldBeat;
    private string? isSaving;
    private string? publishMessage;

    protected override async void OnInitialized()
    {
        newBeat = BeatsService.FileToEdit;
        oldBeat = newBeat;

    }
    private async Task PublishAudio()
    {
        if (!await Auth.IsUserAuthenticatedAsync())
        {
            return;
        }
        var isSuccess = await BeatsService.PublishAudio(newBeat, Auth.UserId);
        if (!isSuccess)
        {
            publishMessage = "Failed to publish";
            return;
        }

        publishMessage = "Published successfully";

    }

    private async Task SaveChanges()
    {

        isSaving = "Saving...";
        StateHasChanged();
        await Task.Delay(400);

        BeatsService.UpdateAudio(newBeat, oldBeat);
        Navigation.NavigateTo("/dashboard");
    }
}
